apiVersion: v1
kind: Service
metadata:
  name: search-recognize-text
  namespace: aleph
  labels:
    app: search-recognize-text
spec:
  selector:
    app: search-recognize-text
  type: ClusterIP
  ports:
    - port: 50000
      protocol: "TCP"
      name: api
---
apiVersion: autoscaling/v2beta1
kind: HorizontalPodAutoscaler
metadata:
  name: search-recognize-text
  namespace: aleph
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: search-recognize-text
  minReplicas: {{ .Values.recognizetext.minReplicas }}
  maxReplicas: {{ .Values.recognizetext.maxReplicas }}
  metrics:
  - type: Resource
    resource:
      name: cpu
      targetAverageUtilization: 80
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: search-recognize-text-policy
  namespace: aleph
spec:
  podSelector:
    matchLabels:
      app: search-recognize-text
  policyTypes:
    - Egress
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: search-recognize-text
  namespace: aleph
  labels:
    app: search-recognize-text
spec:
  selector:
    matchLabels:
      app: search-recognize-text
  strategy:
    rollingUpdate:
      maxSurge: 2
      maxUnavailable: 50%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: search-recognize-text
    spec:
      affinity: # Ask k8s to preferr that pods are placed across zones if available
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - {{ .Values.global.reponame }}
              topologyKey: failure-domain.beta.kubernetes.io/zone
      restartPolicy: Always
      containers:
        - name: search-recognize-text
          image: alephdata/aleph-recognize-text:{{ .Values.global.imagetag }}
          imagePullPolicy: Always
          ports:
            - containerPort: 50000
              name: http
          resources:
            requests:
              memory: {{ .Values.recognizetext.resources.requests.memory }}
              cpu: {{ .Values.recognizetext.resources.requests.cpu }}
            limits:
              memory: {{ .Values.recognizetext.resources.limits.memory }}
              cpu: {{ .Values.recognizetext.resources.limits.cpu }}
